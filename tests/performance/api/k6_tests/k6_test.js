import { apiGet, apiPost, apiPut, apiDelete } from './api.js';
import { loadOpenApiSpec } from './openapi_parser.js';
import { Trend, Rate, Counter } from 'k6/metrics';
import { sleep } from 'k6';

const BASE_URL = 'https://test-service.azza.cc';

// === –ú–µ—Ç—Ä–∏–∫–∏ ===
export const options = {
    stages: [
        { duration: '3s', target: 1 },  // 10 VUs –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥
        { duration: '1s', target: 2 },   // 20 VUs –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã
        { duration: '3s', target: 0 }    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ—Å—Ç
    ],
    thresholds: {
        http_req_duration: ['p(95)<500'], // 95% –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å < 500ms
        'errors': ['rate<0.1'],           // –û—à–∏–±–∫–∏ –Ω–µ –±–æ–ª–µ–µ 10%
    },
};

const ResponseTime = new Trend('response_time');
const SuccessRate = new Rate('success_rate');
const errors = new Rate('errors'); // <---- –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª –∏–∑ ErrorCount –≤ errors

export default function () {
    // üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ OpenAPI –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ VU
    if (__ITER == 0) {
        loadOpenApiSpec(`${BASE_URL}/openapi.json`);
    }

    console.log('üîé –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...');

    // ‚úÖ **GET /data/** ‚Äî –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    let dataResponse = apiGet('/data/');
    ResponseTime.add(dataResponse.timings.duration);
    SuccessRate.add(dataResponse.status === 200);
    if (dataResponse.status !== 200) {
        errors.add(1); // <---- –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
    }
    sleep(1);

    // ‚úÖ **PUT /data/** ‚Äî –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    let putResponse = apiPut('/data/', { "test1": "updatedData" });
    ResponseTime.add(putResponse.timings.duration);
    SuccessRate.add(putResponse.status === 200);
    if (putResponse.status !== 200) {
        errors.add(1); // <---- –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
    }
    sleep(1);

    // ‚úÖ **DELETE /data/** ‚Äî –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    let deleteResponse = apiDelete('/data/');
    ResponseTime.add(deleteResponse.timings.duration);
    SuccessRate.add(deleteResponse.status === 204);
    if (deleteResponse.status !== 204) {
        errors.add(1); // <---- –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
    }
    sleep(1);

    // ‚úÖ **POST /plans/** ‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞
    let postPlanResponse = apiPost('/plans/', { name: "New Test Plan", paths: ["test1"] });
    ResponseTime.add(postPlanResponse.timings.duration);
    SuccessRate.add(postPlanResponse.status === 201);
    if (postPlanResponse.status === 201) {
        const planId = postPlanResponse.json().id;

        // ‚úÖ **GET /plans/{plan_id}** ‚Äî –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∞
        let getPlanResponse = apiGet(`/plans/${planId}`);
        ResponseTime.add(getPlanResponse.timings.duration);
        SuccessRate.add(getPlanResponse.status === 200);

        // ‚úÖ **DELETE /plans/{plan_id}** ‚Äî –£–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞
        let deletePlanResponse = apiDelete(`/plans/${planId}`);
        ResponseTime.add(deletePlanResponse.timings.duration);
        SuccessRate.add(deletePlanResponse.status === 204);

        if (getPlanResponse.status !== 200 || deletePlanResponse.status !== 204) {
            errors.add(1); // <---- –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
        }
    } else {
        errors.add(1); // <---- –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
    }

    // ‚úÖ **GET /restore_points/** ‚Äî –°–ø–∏—Å–æ–∫ Restore Points
    let restorePointsResponse = apiGet('/restore_points/');
    ResponseTime.add(restorePointsResponse.timings.duration);
    SuccessRate.add(restorePointsResponse.status === 200);
    if (restorePointsResponse.status !== 200) {
        errors.add(1); // <---- –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
    }

    // ‚úÖ **GET /tasks/** ‚Äî –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
    let tasksResponse = apiGet('/tasks/');
    ResponseTime.add(tasksResponse.timings.duration);
    SuccessRate.add(tasksResponse.status === 200);
    if (tasksResponse.status !== 200) {
        errors.add(1); // <---- –î–æ–±–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
    }
}
